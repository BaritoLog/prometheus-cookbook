---
driver:
  name: vagrant

provisioner:
  name: chef_zero
  always_update_cookbooks: true
  client_rb:
    chef_license: accept

verifier:
  name: inspec

platforms:
  - name: ubuntu-18.04

suites:
  - name: prometheus
    run_list:
      - recipe[prometheus::default]
    verifier:
      inspec_tests:
        - test/integration/prometheus
    attributes: {
      "prometheus": {
        "config": {
          "alerting": {
            "alertmanagers": [
              {
                "scheme": "http",
                "static_configs": [
                  {
                    "targets": ["localhost:9093"],
                  }
                ]
              }
            ],
          },
          "scrape_configs": {
            "prometheus": {
              "metrics_path": "/metrics",
              "static_configs": [
                {
                  "targets": ["localhost:9090"],
                }
              ]
            },
            "consul": {
              "scrape_interval": "15s",
              "consul_sd_configs": [
                {
                  "server": "localhost:8500",
                  "services": ["node_exporter"]
                }
              ],
              "relabel_configs": [
                {
                  "source_labels": ["__meta_consul_dc"],
                  "target_label": "dc",
                  "regex": "(.*)",
                  "replacement": "${1}"
                }
              ]
            },
            "test": {
              "scrape_interval": "15s",
              "relabel_configs": [
                {
                  "source_labels": ["__address__"],
                  "target_label": "__param_target",
                  "regex": "(.*)(:80)?",
                  "replacement": "${1}"
                },
                {
                  "source_labels": ["__param_target"],
                  "regex": "(.*)",
                  "target_label": "instance",
                  "replacement": "${1}"
                }
              ]
            }
          }
        }
      }
    }
  - name: tls-prometheus
    run_list:
      - recipe[prometheus::default]
    verifier:
      inspec_tests:
        - test/integration/prometheus
    attributes: {
      "prometheus": {
        "tls_certs": {
          "enabled": true,
          "ca_content": "ca_content_sample",
          "cert_content": "cert_content_sample",
          "key_content": "key_content_sample"
        },
        "config": {
          "alerting": {
            "alertmanagers": [
              {
                "scheme": "https",
                "static_configs": [
                  {
                    "targets": ["localhost:443"],
                  }
                ]
              },
              {
                "scheme": "https",
                "static_configs": [
                  {
                    "targets": ["127.0.0.1:443"],
                  }
                ]
              }
            ],
          },
          "remote_write": [
            {
              "url": "localhost:443/insert",
              "remote_timeout": "30s",
              "basic_auth": {
                "username": "",
                "password": ""
              },
              "queue_config": {
                "max_samples_per_send": 5000
              }
            },
            {
              "url": "127.0.0.1:443/insert",
              "remote_timeout": "30s",
              "basic_auth": {
                "username": "test",
                "password": "test"
              },
              "queue_config": {
                "max_samples_per_send": 5000
              }
            }
          ],
          "scrape_configs": {
            "prometheus": {
              "metrics_path": "/metrics",
              "static_configs": [
                {
                  "targets": ["localhost:9090"],
                }
              ]
            },
            "consul": {
              "scrape_interval": "15s",
              "consul_sd_configs": [
                {
                  "server": "localhost:8500",
                  "services": ["node_exporter"]
                }
              ],
              "relabel_configs": [
                {
                  "source_labels": ["__meta_consul_dc"],
                  "target_label": "dc",
                  "regex": "(.*)",
                  "replacement": "${1}"
                }
              ]
            },
            "test": {
              "scrape_interval": "15s",
              "relabel_configs": [
                {
                  "source_labels": ["__address__"],
                  "target_label": "__param_target",
                  "regex": "(.*)(:80)?",
                  "replacement": "${1}"
                },
                {
                  "source_labels": ["__param_target"],
                  "regex": "(.*)",
                  "target_label": "instance",
                  "replacement": "${1}"
                }
              ]
            }
          }
        }
      }
    }
  - name: alertmanager
    run_list:
      - recipe[prometheus::alertmanager]
    verifier:
      inspec_tests:
        - test/integration/alertmanager
    attributes: {
      "alertmanager": {
        "config": {
          "receivers": [
            {
              "name": "slack",
              "slack_configs": [
                {
                  "api_url": "https://api.slack.com",
                  "channel": "#alerts",
                  "send_resolved": true,
                }
              ]
            }
          ],
          "route": {
            "group_by": [
              "alertname",
              "cluster",
              "service",
            ],
            "group_interval": "5m",
            "group_wait": "30s",
            "receiver": "slack",
            "repeat_interval": "4h"
          }
        }
      }
    }
  - name: pushgateway
    run_list:
      - recipe[prometheus::pushgateway]
    verifier:
      inspec_tests:
        - test/integration/pushgateway
  - name: trickster
    run_list:
      - recipe[prometheus::trickster]
    verifier:
      inspec_tests:
        - test/integration/trickster
  - name: node-exporter
    run_list:
      - recipe[prometheus::node_exporter]
    verifier:
      inspec_tests:
        - test/integration/node_exporter
  - name: blackbox-exporter
    run_list:
      - recipe[prometheus::blackbox_exporter]
    verifier:
      inspec_tests:
        - test/integration/blackbox_exporter
  - name: consul-exporter
    run_list:
      - recipe[prometheus::consul_exporter]
    verifier:
      inspec_tests:
        - test/integration/consul_exporter
  - name: graphite-exporter
    run_list:
      - recipe[prometheus::graphite_exporter]
    verifier:
      inspec_tests:
        - test/integration/graphite_exporter
  - name: haproxy-exporter
    run_list:
      - recipe[prometheus::haproxy_exporter]
    verifier:
      inspec_tests:
        - test/integration/haproxy_exporter
  - name: memcached-exporter
    run_list:
      - recipe[prometheus::memcached_exporter]
    verifier:
      inspec_tests:
        - test/integration/memcached_exporter
  - name: mysqld-exporter
    run_list:
      - recipe[prometheus::mysqld_exporter]
    verifier:
      inspec_tests:
        - test/integration/mysqld_exporter
  - name: statsd-exporter
    run_list:
      - recipe[prometheus::statsd_exporter]
    verifier:
      inspec_tests:
        - test/integration/statsd_exporter
  - name: elasticsearch-exporter
    run_list:
      - recipe[prometheus::elasticsearch_exporter]
    verifier:
      inspec_tests:
        - test/integration/elasticsearch_exporter
  - name: postgres-exporter
    run_list:
      - recipe[prometheus::postgres_exporter]
    verifier:
      inspec_tests:
        - test/integration/postgres_exporter
  - name: redis-exporter
    run_list:
      - recipe[prometheus::redis_exporter]
    verifier:
      inspec_tests:
        - test/integration/redis_exporter
  - name: kafka-exporter
    run_list:
      - recipe[prometheus::kafka_exporter]
    verifier:
      inspec_tests:
        - test/integration/kafka_exporter
  - name: fluentd-exporter
    run_list:
      - recipe[prometheus::fluentd_exporter]
    verifier:
      inspec_tests:
        - test/integration/fluentd_exporter
  - name: lxd-exporter
    run_list:
      - recipe[pathfinder-node::first_node]
      - recipe[prometheus::lxd_exporter]
    verifier:
      inspec_tests:
        - test/integration/lxd_exporter
  - name: pathfinder-discovery
    run_list:
      - recipe[prometheus::pathfinder_discovery]
    verifier:
      inspec_tests:
        - test/integration/pathfinder_discovery
    attributes: {
      "pathfinder_discovery": {
        "pathfinder_cluster": ["pathfinder"]
      }
    }
  - name: zookeeper-exporter
    run_list:
      - recipe[prometheus::zookeeper_exporter]
    verifier:
      inspec_tests:
        - test/integration/zookeeper_exporter
  - name: zfs-exporter
    run_list:
      - recipe[prometheus::zfs_exporter]
    verifier:
      inspec_tests:
        - test/integration/zfs_exporter
  - name: kibana-exporter
    driver:
      customize:
        memory: 4096
        cpus: 2
    run_list:
      - recipe[kibana_wrapper_cookbook::default]
      - recipe[prometheus::kibana_exporter]
    verifier:
      inspec_tests:
        - test/integration/kibana_exporter
  - name: promxy
    driver:
      customize:
        memory: 1000
        cpus: 1
    run_list:
      - recipe[prometheus::promxy]
    verifier:
      inspec_tests:
        - test/integration/promxy
    attributes: {
      "prometheus": {
        "config": {
          "alerting": {
            "alertmanagers": [
              {
                "scheme": "http",
                "static_configs": [
                  {
                    "targets": ["localhost:9093"],
                  }
                ]
              }
            ],
          }
        }
      }
    }